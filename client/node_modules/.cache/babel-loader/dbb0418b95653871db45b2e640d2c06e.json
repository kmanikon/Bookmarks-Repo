{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kiranmanikonda/react_projects/memories_app/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/kiranmanikonda/react_projects/memories_app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/kiranmanikonda/react_projects/memories_app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kiranmanikonda/react_projects/memories_app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import{useDispatch,useSelector}from'react-redux';import FileBase from'react-file-base64';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';// this form handles post creation and updates\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(_ref){var _user$result3;var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;// state for post data\nvar _useState=useState({title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];// whether user has selected a post\nvar post=useSelector(function(state){return currentId?state.posts.find(function(p){return p._id===currentId;}):null;});var classes=useStyles();// keep user id\nvar user=JSON.parse(localStorage.getItem('profile'));var dispatch=useDispatch();// if user selects a new post, show it in form\nuseEffect(function(){if(post)setPostData(post);},[post]);// clear form data\nvar clear=function clear(){setCurrentId(0);// might change back to null\nsetPostData({title:'',message:'',tags:'',selectedFile:''});};// send form data to actions\nvar handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var _user$result,_user$result2;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(currentId===0){// create\ndispatch(createPost(_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result=user.result)===null||_user$result===void 0?void 0:_user$result.name})));clear();}else{// update\ndispatch(updatePost(currentId,_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result2=user.result)===null||_user$result2===void 0?void 0:_user$result2.name})));clear();}case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();// form if user is not logged in\nif(!(user!==null&&user!==void 0&&(_user$result3=user.result)!==null&&_user$result3!==void 0&&_user$result3.name)){return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Please Sign In to create your own memories and like other's memories.\"})});}return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a Memory\"]}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref3){var base64=_ref3.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});};export default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","user","JSON","parse","localStorage","getItem","dispatch","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["/Users/kiranmanikonda/react_projects/memories_app/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\n// this form handles post creation and updates\n\nconst Form = ({ currentId, setCurrentId }) => {\n  // state for post data\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n  \n  // whether user has selected a post\n  const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n  \n  const classes = useStyles();\n  \n  // keep user id\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const dispatch = useDispatch();\n  \n  \n  // if user selects a new post, show it in form\n  useEffect(() => {\n    if(post) setPostData(post);\n  }, [post])\n\n  // clear form data\n  const clear = () => {\n    setCurrentId(0); // might change back to null\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n  }\n \n  // send form data to actions\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) { // create\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else { // update\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n\n  // form if user is not logged in\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and like other's memories.\n        </Typography>\n      </Paper>\n    );\n  }\n\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n      <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n      \n      <TextField \n        name=\"title\" \n        variant=\"outlined\" \n        label=\"Title\" \n        fullWidth \n        value={postData.title}\n        onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n      />\n      <TextField \n        name=\"message\" \n        variant=\"outlined\" \n        label=\"Message\" \n        fullWidth \n        value={postData.message}\n        onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n      />\n      <TextField \n        name=\"tags\" \n        variant=\"outlined\" \n        label=\"Tags\" \n        fullWidth \n        value={postData.tags}\n        onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n      />\n\n      <div className={classes.fileInput}>\n        <FileBase\n          type=\"file\"\n          multiple={false}\n          onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}\n        />\n      </div>\n\n      <Button \n        className={classes.buttonSubmit} \n        variant=\"contained\" \n        color=\"primary\" \n        size=\"large\" \n        type=\"submit\" \n        fullWidth>\n          Submit\n      </Button>\n\n      <Button \n        variant=\"contained\" \n        color=\"secondary\" \n        size=\"small\" \n        onClick={clear}\n        fullWidth>\n          Clear\n      </Button>\n\n      </form>\n    </Paper>\n  )\n};\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}