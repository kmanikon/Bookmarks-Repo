{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js'; // handle fetch posts from mongoDB\n\nexport const getPosts = () => async dispatch => {\n  try {\n    // get posts from DB\n    const {\n      data\n    } = await api.fetchPosts(); // update posts page\n\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // handle adding a new post (post)\n\nexport const createPost = post => async dispatch => {\n  try {\n    // send post data with post request\n    const {\n      data\n    } = await api.createPost(post); // update the posts page\n\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // handle post updates (patch)\n\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    // get updated post data with .patch() return\n    const {\n      data\n    } = await api.updatePost(id, post); // update posts\n\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // handle post liking (working on adding one like per user)\n\nexport const likePost = id => async dispatch => {\n  //const user = JSON.parse(localStorage.getItem('profile'));\n  try {\n    // patch request with post id and +1 to likes\n    const {\n      data\n    } = await api.likePost(id); //console.log('api -> liked Post');\n    // update posts\n\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    //console.log('nolike')\n    console.log(error);\n  }\n};\n/*\n\nignore\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    console.log('printing like data')\n    console.log(data);\n    dispatch({ type: LIKE, payload: data });\n    console.log('api -> liked Post');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n*/\n// handle post deleting\n\nexport const deletePost = id => async dispatch => {\n  try {\n    // send .delete() request to DB\n    await api.deletePost(id); // update posts\n\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","createPost","post","updatePost","id","likePost","deletePost"],"sources":["/Users/kiranmanikonda/react_projects/bookmarks_app/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\n\n// handle fetch posts from mongoDB\nexport const getPosts = () => async (dispatch) => {\n  try {\n    \n    // get posts from DB\n    const { data } = await api.fetchPosts();\n\n    // update posts page\n    dispatch({ type: FETCH_ALL, payload: data });\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// handle adding a new post (post)\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    // send post data with post request\n    const { data } = await api.createPost(post);\n\n    // update the posts page\n    dispatch({ type: CREATE, payload: data });\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// handle post updates (patch)\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    // get updated post data with .patch() return\n    const { data } = await api.updatePost(id, post);\n\n    // update posts\n    dispatch({ type: UPDATE, payload: data });\n\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// handle post liking (working on adding one like per user)\nexport const likePost = (id) => async (dispatch) => {\n\n  //const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    // patch request with post id and +1 to likes\n    const { data } = await api.likePost(id);\n    //console.log('api -> liked Post');\n\n    // update posts\n    dispatch({ type: LIKE, payload: data });\n\n  } catch (error) {\n    //console.log('nolike')\n    console.log(error);\n  }\n};\n\n/*\n\nignore\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    console.log('printing like data')\n    console.log(data);\n    dispatch({ type: LIKE, payload: data });\n    console.log('api -> liked Post');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n*/\n\n// handle post deleting\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    // send .delete() request to DB\n    await api.deletePost(id);\n\n    // update posts\n    dispatch({ type: DELETE, payload: id });\n    \n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAChD,IAAI;IAEF;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB,CAHE,CAKF;;IACAF,QAAQ,CAAC;MAAEG,IAAI,EAAEV,SAAR;MAAmBW,OAAO,EAAEH;IAA5B,CAAD,CAAR;EAED,CARD,CAQE,OAAOI,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAZM,C,CAcP;;AACA,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAOT,QAAP,IAAoB;EACtD,IAAI;IACF;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACU,UAAJ,CAAeC,IAAf,CAAvB,CAFE,CAIF;;IACAT,QAAQ,CAAC;MAAEG,IAAI,EAAET,MAAR;MAAgBU,OAAO,EAAEH;IAAzB,CAAD,CAAR;EAED,CAPD,CAOE,OAAOI,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAXM,C,CAaP;;AACA,OAAO,MAAMK,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOT,QAAP,IAAoB;EAC1D,IAAI;IACF;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACY,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB,CAFE,CAIF;;IACAT,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAR;MAAgBS,OAAO,EAAEH;IAAzB,CAAD,CAAR;EAED,CAPD,CAOE,OAAOI,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAXM,C,CAaP;;AACA,OAAO,MAAMO,QAAQ,GAAID,EAAD,IAAQ,MAAOX,QAAP,IAAoB;EAElD;EAEA,IAAI;IACF;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACc,QAAJ,CAAaD,EAAb,CAAvB,CAFE,CAGF;IAEA;;IACAX,QAAQ,CAAC;MAAEG,IAAI,EAAEN,IAAR;MAAcO,OAAO,EAAEH;IAAvB,CAAD,CAAR;EAED,CARD,CAQE,OAAOI,KAAP,EAAc;IACd;IACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAhBM;AAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMQ,UAAU,GAAIF,EAAD,IAAQ,MAAOX,QAAP,IAAoB;EACpD,IAAI;IACF;IACA,MAAMF,GAAG,CAACe,UAAJ,CAAeF,EAAf,CAAN,CAFE,CAIF;;IACAX,QAAQ,CAAC;MAAEG,IAAI,EAAEP,MAAR;MAAgBQ,OAAO,EAAEO;IAAzB,CAAD,CAAR;EAED,CAPD,CAOE,OAAON,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAXM"},"metadata":{},"sourceType":"module"}