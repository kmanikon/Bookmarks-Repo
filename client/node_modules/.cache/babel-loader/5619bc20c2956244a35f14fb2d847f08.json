{"ast":null,"code":"var _jsxFileName = \"/Users/kiranmanikonda/react_projects/bookmarks_app/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles'; // grid for holding post components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    setCurrentId\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem('profile')); // access redux store\n\n  const posts = useSelector(state => {\n    //if (state)\n    return state.posts.filter(post => {\n      var _user$result;\n\n      if ((user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) === (post === null || post === void 0 ? void 0 : post.name)) {\n        return post;\n      }\n    });\n  });\n  const classes = useStyles(); // if (!length), circularprogress (loading)\n  // else grid with posts\n\n  return posts.length === null ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          setCurrentId: setCurrentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Posts, \"C/BxEwR0KgzJ2Knmlc9v0LYcdx8=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Grid","CircularProgress","useSelector","Post","useStyles","Posts","setCurrentId","user","JSON","parse","localStorage","getItem","posts","state","filter","post","result","name","classes","length","container","map","_id"],"sources":["/Users/kiranmanikonda/react_projects/bookmarks_app/client/src/components/Posts/Posts.js"],"sourcesContent":["import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\n// grid for holding post components\n\nconst Posts = ({ setCurrentId }) => {\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  // access redux store\n  const posts = useSelector(state => {\n    //if (state)\n    \n    return state.posts.filter((post) => {\n      if (user?.result?.name === post?.name){\n        \n        return post;\n      }\n    })\n      \n  \n  });\n\n  const classes = useStyles();\n\n  // if (!length), circularprogress (loading)\n  // else grid with posts\n\n  return (\n    posts.length === null ? <CircularProgress /> : (\n      <div>\n      <div>LOL</div>\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts\n        \n        .map((post) => (\n          \n          <Grid key={post._id} item xs={12} sm={12} md={12}>\n            <Post post={post} setCurrentId={setCurrentId}/>\n          </Grid>\n          \n        ))}\n      </Grid>\n      </div>\n    )\n  );\n};\n\nexport default Posts;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB,C,CAEA;;;;AAEA,MAAMC,KAAK,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EAElC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb,CAFkC,CAIlC;;EACA,MAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAI;IACjC;IAEA,OAAOA,KAAK,CAACD,KAAN,CAAYE,MAAZ,CAAoBC,IAAD,IAAU;MAAA;;MAClC,IAAI,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAES,MAAN,8DAAcC,IAAd,OAAuBF,IAAvB,aAAuBA,IAAvB,uBAAuBA,IAAI,CAAEE,IAA7B,CAAJ,EAAsC;QAEpC,OAAOF,IAAP;MACD;IACF,CALM,CAAP;EAQD,CAXwB,CAAzB;EAaA,MAAMG,OAAO,GAAGd,SAAS,EAAzB,CAlBkC,CAoBlC;EACA;;EAEA,OACEQ,KAAK,CAACO,MAAN,KAAiB,IAAjB,gBAAwB,QAAC,gBAAD;IAAA;IAAA;IAAA;EAAA,QAAxB,gBACE;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,IAAD;MAAM,SAAS,EAAED,OAAO,CAACE,SAAzB;MAAoC,SAAS,MAA7C;MAA8C,UAAU,EAAC,SAAzD;MAAmE,OAAO,EAAE,CAA5E;MAAA,UACGR,KAAK,CAELS,GAFA,CAEKN,IAAD,iBAEH,QAAC,IAAD;QAAqB,IAAI,MAAzB;QAA0B,EAAE,EAAE,EAA9B;QAAkC,EAAE,EAAE,EAAtC;QAA0C,EAAE,EAAE,EAA9C;QAAA,uBACE,QAAC,IAAD;UAAM,IAAI,EAAEA,IAAZ;UAAkB,YAAY,EAAET;QAAhC;UAAA;UAAA;UAAA;QAAA;MADF,GAAWS,IAAI,CAACO,GAAhB;QAAA;QAAA;QAAA;MAAA,QAJD;IADH;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAkBD,CAzCD;;GAAMjB,K;UAKUH,W,EAaEE,S;;;KAlBZC,K;AA2CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}